@startuml
class cs211.project.controllers.ManageEventController {
- Label errorDragImage
- Label errorLabelDetail
- Label errorLabelEndDate
- Label errorLabelEndTime
- Label errorLabelLocation
- Label errorLabelMaxParticipant
- Label errorLabelName
- Label errorLabelStartDate
- Label errorLabelStartTime
- Label errorLabelCloseEndTime
- Label errorLabelCloseStartDate
- Label errorLabelOpenStartDate
- Label errorLabelOpenTimeDate
- AnchorPane footer
- AnchorPane navbar
- DatePicker pickerEndDate
- DatePicker pickerStartDate
- TextArea textAreaDetail
- TextField textFieldEndTime
- TextField textFieldLocation
- TextField textFieldMaxParticipant
- TextField textFieldName
- TextField textFieldStartTime
- DatePicker pickerOpenDate
- TextField textFieldOpenTime
- DatePicker pickerCloseDate
- TextField textFieldCloseTime
- ImageView imageView
- HashMap<String,Object> data
- Datasource<EventCollection> eventDatasource
- File imageFile
- void initialize()
+ void backToEvent()
~ void onHandleDragOver(DragEvent)
~ void onHandelDragDropped(DragEvent)
+ void onHandleUploadButton(ActionEvent)
+ void onHandleCreateEvent()
}
class cs211.project.controllers.ContactUsController {
- AnchorPane navbar
- AnchorPane footer
- Circle professor1
- Circle professor2
- Circle professor3
- Circle professor4
- Circle admin1
- Circle admin2
- Circle admin3
- Circle admin4
- HashMap<String,Object> data
- void initialize()
+ void setProfessorImage()
+ void setAdminImage()
}
class cs211.project.controllers.JoinTeamController {
- AnchorPane navbar
- AnchorPane footer
- Label eventName
- VBox joinTeamVbox
- List<JoinTeamCard> joinTeamCardList
- TeamCollection teamCollection
- EventCollection eventCollection
- TeamListFileDatasource teamDatasource
- EventListFileDatasource eventDatasource
- JoinEventListFileDatasource joinEventDatasource
- TeamMemberListFileDatasource teamMemberDatasource
- ExecutorService executorService
- HashMap<String,Object> data
- UUID eventId
- void initialize()
+ void reload()
~ void initJoinTeam()
~ void onHandleBackToEventDetail(ActionEvent)
}
class cs211.project.controllers.TeamManagementController {
- UUID teamId
- UUID leaderId
- AnchorPane navbar
- AnchorPane footer
- Button addActivityButton
- VBox memberVbox
- List<TeamMemberCard> teamMemberCardList
- Datasource<TeamMemberCollection> teamMemberDatasource
- Datasource<TeamCollection> teamDatasource
- Datasource<UserCollection> userDatasource
- Datasource<EventCollection> eventDatasource
- TeamMemberCollection teamMemberCollection
- HashMap<String,Object> data
- Event currentEvent
- Team currentTeam
- ExecutorService executorService
- TableView<Activity> scheduleTable
- TableColumn<Activity,String> orderColumn
- TableColumn<Activity,String> nameColumn
- TableColumn<Activity,Label> statusColumn
- TableColumn<Activity,HBox> tool
- Datasource<TeamActivityCollection> teamActivityDatasource
- TeamActivityCollection activityCollection
- boolean isLeader
- Label teamName
- Text activityDetail
- Label startAndEndDateTime
- Button closeModal
- AnchorPane backDrop
- Pane modal
- String previousPage
- void initialize()
- void checkIsLeader()
- void showTable()
- void openModalDialog(Activity)
~ void onHandleCloseModal(ActionEvent)
~ void initTeamMember()
~ void onHandleAddActivity(ActionEvent)
~ void onHandleBackToMyTeam(ActionEvent)
+ void reloadData()
}
class cs211.project.controllers.components.ProfileImageController {
- Circle profileImage
- String imagePath
+ void setProfileImage(String)
+ String getImagePath()
}
class cs211.project.controllers.components.TeamMemberCard {
- Circle image
- UUID userId
- UUID teamId
- ImageView dropdown
- Label name
- Label role
- Pane menuDropdown
- VBox dropdownVBox
- Pane border
- Button changeRoleButton
- Button deleteTeamMemberButton
- TeamManagementController teamManagementController
- Boolean showMenuDropdown
- Datasource<TeamCollection> teamDatasource
- Datasource<TeamMemberCollection> teamMemberDatasource
- Boolean isLeader
- void initialize()
~ void onHandleMenuDropdownClick(MouseEvent)
~ void onHandleChangeRole(ActionEvent)
~ void onHandleDeleteTeamMember(ActionEvent)
+ String getImage()
+ String getName()
+ String getRole()
+ String getUserId()
+ String getTeamId()
+ void setUserId(String)
+ void setTeamId(String)
+ void setImage(String)
+ void setIsLeader(Boolean)
+ void setDropdownButtonVisible(Boolean)
+ void setName(String)
+ void setRole(String)
+ void setParentController(TeamManagementController)
+ void setChangeRoleButtonVisible(Boolean)
}
class cs211.project.controllers.MyEventController {
- AnchorPane navbar
- AnchorPane footer
- VBox myEventComponent
- Datasource<EventCollection> datasource
- Datasource<JoinEventCollection> datasourceJoinEvent
- EventCollection myEventList
- HashMap<String,Object> data
- void initialize()
+ void goToCreateEvent()
+ void reload()
}
class cs211.project.controllers.components.ListTeamCard {
- Circle headTeamImageCircle
- Label headTeamLabel
- Button orderNumber
- Label teamLabel
- String pathHeadTeamImage
- HashMap<String,Object> data
- Datasource<TeamCollection> datasourceTeam
- TeamCollection teamList
- ListTeamController teamController
+ void initialize()
+ void getGoToSettingTeam()
+ void goToEditTeam()
+ void onHandleDeleteTeam()
+ String getHeadTeamImage()
+ String getHeadTeamLabel()
+ String getOrderNumber()
+ String getTeamLabel()
+ HashMap<String,Object> getData()
+ void setHeadTeamImage(String)
+ void setHeadTeamLabel(String)
+ void setOrderNumber(String)
+ void setTeamLabel(String)
+ void setData(HashMap<String,Object>)
+ void setTeamController(ListTeamController)
}
class cs211.project.controllers.EventParticipantController {
- AnchorPane footer
- AnchorPane navbar
- HashMap<String,Object> data
- TableColumn<JoinEvent,String> orderTable
- TableView<JoinEvent> participantTable
- TableColumn<JoinEvent,String> nameTable
- TableColumn<JoinEvent,HBox> actionTable
- TableColumn<JoinEvent,String> dateRegTable
- Datasource<JoinEventCollection> joinEventDatasource
- Datasource<UserCollection> userDatasource
- UserCollection users
- void initialize()
- void showTable()
~ void goToMyEvent(ActionEvent)
}
class cs211.project.controllers.LoginController {
- Label loginError
- TextField usernameField
- PasswordField passwordField
- Button loginButton
- Button registerButton
- Button guideButton
- Datasource<UserCollection> userListFileDatasource
+ void initialize()
- void validateFields()
- void handleLoginButtonClick(ActionEvent)
- void handleRegisterButtonClick(ActionEvent)
~ void handleGuideButtonClick(ActionEvent)
}
class cs211.project.controllers.components.RightChatLayoutController {
- Text myMessage
- Label timestamp
+ String getMyMessage()
+ String getTimestamp()
+ void setMyMessage(String)
+ void setTimestamp(String)
}
class cs211.project.controllers.components.EventCard {
- String eventId
- Label eventDate
- Rectangle eventImage
- String imagePath
- Label eventLocation
- Text eventName
- Label eventParticipant
- HashMap<String,Object> data
- int currentParticipant
- void initialize()
~ void onHandleGoToEventDetail(MouseEvent)
+ String getEventId()
+ String getEventDate()
+ String getEventImage()
+ String getEventLocation()
+ String getEventName()
+ String getEventParticipant()
+ int getCurrentParticipant()
+ void setCurrentParticipant(int)
+ void setEventId(String)
+ void setEventDate(String)
+ void setEventImage(String)
+ void setEventLocation(String)
+ void setEventName(String)
+ void setEventParticipant(String)
+ void setData(HashMap<String,Object>)
}
class cs211.project.controllers.ListTeamController {
- AnchorPane navbar
- AnchorPane footer
- VBox teamComponent
- Label locationLabel
- Label nameLabel
- Label participantLabel
- Label dateLabel
- ImageView previewImageView
- List<ListTeamCard> ListTeamCardList
- HashMap<String,Object> data
- Datasource<EventCollection> datasourceEvent
- Datasource<JoinEventCollection> datasourceJoinEvent
- Datasource<TeamCollection> datasourceTeam
- Datasource<UserCollection> datasourceUser
- EventCollection eventList
- JoinEventCollection joinEventList
- TeamCollection teamList
- UserCollection userList
- void initialize()
+ void goToCreateTeam()
+ void backToMyEvent()
+ void reload()
}
class cs211.project.controllers.components.WhiteEventCard {
- String eventId
- Label eventDate
- Rectangle eventImage
- String imagePath
- Label eventLocation
- Text eventName
- Label eventParticipant
- HashMap<String,Object> data
- int currentParticipant
- void initialize()
~ void onHandleGoToEventDetail(MouseEvent)
+ String getEventId()
+ String getEventDate()
+ String getEventImage()
+ String getEventLocation()
+ String getEventName()
+ String getEventParticipant()
+ int getCurrentParticipant()
+ void setCurrentParticipant(int)
+ void setEventDate(String)
+ void setEventImage(String)
+ void setEventLocation(String)
+ void setEventName(String)
+ void setEventParticipant(String)
+ void setData(HashMap<String,Object>)
}
class cs211.project.controllers.DashboardController {
- AnchorPane footer
- Label lastLoginDateLabel
- TableColumn<?,?> nameColumn
- Label nameLabel
- AnchorPane navbar
- TableColumn<User,Number> orderColumn
- Label registerDateLabel
- TableColumn<?,?> roleColumn
- Label roleLabel
- Label totalAdminLabel
- Label totalEventLabel
- Label totalUserLabel
- Circle avatarPicture
- TableView<User> userTable
- TableColumn<?,?> usernameColumn
- UUID userId
- HashMap<String,Object> data
- Datasource<UserCollection> userListFileDatasource
- Datasource<EventCollection> eventListFileDatasource
- void initialize()
- void loadUsersIntoTable()
- void updateTotalUsersCount()
- void updateTotalAdminsCount()
}
class cs211.project.controllers.RegisterController {
- TextField firstNameField
- Label firstNameError
- TextField lastNameField
- Label lastNameError
- TextField usernameField
- Label usernameError
- PasswordField passwordField
- Label passwordError
- PasswordField confirmPasswordField
- Label confirmPasswordError
- Button registerButton
- Button loginButton
- UserListFileDatasource userListFileDatasource
- UserCollection userCollection
+ void initialize()
- void validateFields()
+ void handleRegisterButtonClick()
+ void handleLoginButtonClick(ActionEvent)
- void validateFirstName()
- void validateLastName()
- void validateUsername()
- void validatePassword()
- void validateConfirmPassword()
}
class cs211.project.controllers.CreateTeamController {
- Label dateLabel
- DatePicker datePickerEndDate
- DatePicker datePickerStartDate
- Label errorLabelEndDate
- Label errorLabelEndTime
- Label errorLabelMaxParticipant
- Label errorLabelName
- Label errorLabelStartDate
- Label errorLabelStartTime
- AnchorPane footer
- ImageView imageViewPreview
- Label locationLabel
- Label nameLabel
- AnchorPane navbar
- Label participantLabel
- VBox teamPreviewComponent
- TextField textFieldEndTime
- TextField textFieldMaxParticipant
- TextField textFieldName
- TextField textFieldStartTime
- HashMap<String,Object> data
- Datasource<TeamCollection> teamDatasource
- Datasource<EventCollection> eventDatasource
- Datasource<JoinEventCollection> joinEventDatasource
- Datasource<UserCollection> userDatasource
- TeamCollection teamList
- EventCollection eventList
- JoinEventCollection joinEventList
- UserCollection userList
- void initialize()
+ void createTeam()
+ void backToListTeam()
}
class cs211.project.controllers.components.MyEventCard {
- Label eventDate
- ImageView eventImage
- Label eventLocation
- Label eventTitle
- Button eventToggleStatus
- Button orderNumber
- Label participantEvent
- String pathEventImage
- boolean statusEvent
- HashMap<String,Object> data
- MyEventController myEventController
- Datasource<EventCollection> datasourceEvent
- Datasource<TeamCollection> datasourceTeam
- Datasource<TeamMemberCollection> datasourceTeamMember
- Datasource<JoinEventCollection> datasourceJoinEvent
+ void initialize()
+ void goToListTeam()
+ void goToEditEvent()
+ void goToParticipant()
+ void goToActivityEvent()
+ void onHandleDeleteEvent()
+ void onHandleEventStatus()
+ String getEventDate()
+ String getEventImage()
+ String getEventLocation()
+ String getEventTitle()
+ String getOrderNumber()
+ String getParticipantEvent()
+ HashMap<String,Object> getData()
+ void setMyEventController(MyEventController)
+ void setEventDate(String)
+ void setEventImage(String)
+ void setEventLocation(String)
+ void setEventTitle(String)
+ void setOrderNumber(String)
+ void setParticipantEvent(String)
+ void setStatusEvent(boolean)
+ void setData(HashMap<String,Object>)
}
class cs211.project.controllers.IndexController {
- AnchorPane navbar
- AnchorPane footer
- HBox eventCardHbox
- HBox popularEventCardHbox
- HBox comingEventCardHbox
- List<EventCard> eventCardList
- List<WhiteEventCard> popularEventCardList
- List<WhiteEventCard> comingEventCardList
- HashMap<String,Object> data
- Datasource<EventCollection> eventDatasource
- Datasource<JoinEventCollection> joinEventDatasource
- EventCollection eventCollection
- ImageView image1
- ImageView image2
- ImageView image3
- ImageView image4
- AnchorPane mainSlide
- ExecutorService executorService
- void initialize()
~ void initPopularEvent()
~ void initClosestEvent()
~ void onHandleGoToAllEvent(ActionEvent)
~ void onHandleGoToCreateEvent(ActionEvent)
+ void slider()
}
class cs211.project.controllers.CreateTeamActivityController {
- Circle activityCreatorImage
- Label activityCreatorName
- TableColumn<Activity,String> dateColumn
- Label eventDate
- ImageView eventImage
- Label eventLocation
- Label eventName
- Label eventParticipant
- Label errorActivityDetail
- Label errorActivityName
- Label errorInputEndDate
- Label errorInputEndTime
- Label errorInputStartDate
- Label errorInputStartTime
- DatePicker inputActivityDateEnd
- DatePicker inputActivityDateStart
- TextArea inputActivityDetail
- TextField inputActivityName
- TextField inputActivityTimeEnd
- TextField inputActivityTimeStart
- TableColumn<Activity,String> nameColumn
- TableView<Activity> scheduleTable
- Label teamName
- TableColumn<Activity,String> timestampColumn
- Label titlePage
- AnchorPane navbar
- AnchorPane footer
- Datasource<EventCollection> eventDatasource
- Datasource<JoinEventCollection> joinEventDatasource
- Datasource<UserCollection> userDatasource
- Datasource<TeamCollection> teamDatasource
- Datasource<TeamActivityCollection> teamActivityDatasource
- HashMap<String,Object> data
- UUID eventId
- UUID teamId
- UUID userId
- UUID activityId
- TeamActivityCollection activityCollection
- boolean isEdit
- void initialize()
- void showTable()
~ void initHeader()
~ void onHandleBackToPreviousPage(ActionEvent)
~ void onHandleSaveButton(ActionEvent)
~ void clearInput()
}
class cs211.project.controllers.TeamChatController {
- UUID teamId
- UUID userId
- UUID activityId
- Label eventDate
- ImageView eventImage
- Label eventLocation
- Label eventName
- Label eventParticipant
- AnchorPane navbar
- AnchorPane footer
- VBox showChat
- GridPane showMember
- Label teamName
- TextField inputMessage
- ChatCollection chatList
- ScrollPane chatScroll
- List<ProfileImageController> profileImageControllerList
- Datasource<ChatCollection> chatDatasource
- Datasource<TeamCollection> teamCollectionDatasource
- Datasource<TeamMemberCollection> teamMemberCollectionDatasource
- Datasource<EventCollection> eventDatasource
- Datasource<TeamActivityCollection> teamActivityDatasource
- Datasource<JoinEventCollection> joinEventCollectionDatasource
- ExecutorService executorService
- HashMap<String,Object> data
- void initialize()
~ void onHandleBackToPreviousPage(ActionEvent)
~ void onHandleSendMessage(ActionEvent)
- void initHeader()
- void initChat()
- void initAllMemberProfile()
- {static} void ensureVisible(ScrollPane,Node)
}
class cs211.project.controllers.EventHistoryController {
- AnchorPane footer
- AnchorPane navbar
- TableView<Event> eventHistoryTable
- TableColumn<Event,String> joinTimeColumn
- TableColumn<Event,?> eventColumn
- TableColumn<Event,Integer> orderColumn
- TableColumn<Event,String> statusColumn
- TableColumn<Event,HBox> toolColumn
- EventCollection eventCollection
- UUID userId
- HashMap<String,Object> data
- Datasource<UserCollection> userListFileDatasource
- Datasource<EventCollection> eventListFileDatasource
- Datasource<JoinEventCollection> joinEventCollectionDatasource
- void initialize()
- String getJoinTimeForEvent(String)
- void loadEventsIntoTable()
+ void onHandleGoToEventDetail(ActionEvent)
}
class cs211.project.controllers.components.MyTeamCardController {
- UUID teamId
- UUID userId
- UUID eventId
- Label applicants
- Label teamApplicants
- ImageView eventImage
- Label eventName
- MyTeamController myTeamController
- Button order
- Label startDate
- Label teamName
- Label eventLocation
- Button teamDetailButton
- Button leaveTeamButton
- Datasource<TeamMemberCollection> datasourceTeamMember
+ void setActivityIsEnd()
+ void setParentController(MyTeamController)
+ void setTeamApplicants(String)
+ void setTeamId(String)
+ void setUserId(String)
+ void setEventId(String)
+ void setApplicants(String)
+ void setEventImage(String)
+ void setEventName(String)
+ void setEventLocation(String)
+ void setOrder(String)
+ void setStartDate(String)
+ void setTeamName(String)
+ String getTeamId()
+ String getUserId()
+ String getApplicants()
+ String getEventId()
+ String getEventImage()
+ String getEventName()
+ String getEventLocation()
+ String getOrder()
+ String getStartDate()
+ String getTeamName()
+ String getTeamApplicants()
~ void onHandleGoToTeamManagement(ActionEvent)
~ void onHandleLeaveTeam(ActionEvent)
}
class cs211.project.controllers.ProfileController {
- ImageView avatarPicture
- AnchorPane navbar
- AnchorPane footer
- Button saveButton
- Label registerDateLabel
- Label lastLoginDateLabel
- Button backButton
- Button editButton
- TextField firstNameField
- TextField lastNameField
- Label nameError
- TextField usernameField
- Label usernameError
- PasswordField currentPasswordField
- Label currentPasswordError
- PasswordField newPasswordField
- Label newPasswordError
- PasswordField confirmNewPasswordField
- Label confirmNewPasswordError
- UUID userId
- File avatarFile
- HashMap<String,Object> data
- Datasource<UserCollection> userListFileDatasource
- void initialize()
- void handleSaveButtonClick(ActionEvent)
~ void handleEditAvatarButtonClick(ActionEvent)
- void handleBackButtonClick(ActionEvent)
- void validateCurrentPassword()
- void validateNewPassword()
- void validateConfirmNewPassword()
}
class cs211.project.controllers.NavbarController {
- Circle navImageProfile
- Label name
- Label role
- Pane manageDropdown
- Boolean showManageDropdown
- Boolean showProfileDropdown
- HashMap<String,Object> data
- Pane profileDropdown
- Datasource<UserCollection> userDatasource
- User user
- Pane currentTheme
- ComboBox<String> fontSizeComboBox
- ComboBox<String> fontStyleComboBox
- {static} Boolean isDarkTheme
- VBox managementOption
- void initialize()
+ void setNavbarImage(String)
+ void setData(HashMap<String,Object>)
+ void setName(Label)
+ void setRole(Label)
~ void setFontSizeComboBox()
~ void setFontStyleClass()
~ void onHandleGoToContactUs(ActionEvent)
~ void onHandleGoToHomePage(ActionEvent)
~ void onHandleGoToMyEvent(MouseEvent)
~ void onHandleGoToMyTeam(MouseEvent)
~ void onHandleGoToMyProfile(MouseEvent)
~ void onHandleGoToHistory(MouseEvent)
~ void onHandleGoToDashboard(MouseEvent)
~ void onHandleManageDropdown(MouseEvent)
~ void onHandleProfileDropdown(MouseEvent)
~ void onChangeTheme(MouseEvent)
~ void onHandleLogout(ActionEvent)
~ void animationThemeChange()
}
class cs211.project.controllers.EventActivityController {
- Label eventDate
- ImageView eventImage
- Label eventLocation
- Label eventName
- Label eventParticipant
- AnchorPane footer
- AnchorPane navbar
- UUID eventId
- HashMap<String,Object> data
- Datasource<EventActivityCollection> eventActivityDatasource
- Datasource<EventCollection> eventDatasource
- Datasource<JoinEventCollection> joinEventCollectionDatasource
- TableColumn<Activity,String> orderColumn
- TableView<Activity> scheduleTable
- TableColumn<Activity,String> nameColumn
- TableColumn<Activity,String> dateTimeEndColumn
- TableColumn<Activity,String> dateTimeStartColumn
- TableColumn<Activity,String> detailColumn
- TableColumn<Activity,HBox> tool
- Text activityDetail
- AnchorPane backDrop
- Button closeModal
- Pane modal
- UUID creatorId
- boolean isCreator
- Event currentEvent
- Button addActivityButton
- String previousPage
~ void initialize()
- void initHeader()
- void checkIsEventCreator()
- void showTable()
- void openModalDialog(Activity)
~ void onHandleCloseModal(ActionEvent)
~ void onHandleAddActivity(ActionEvent)
~ void backToPreviousPage(ActionEvent)
}
class cs211.project.controllers.MyTeamController {
- ExecutorService executorService
- AnchorPane navbar
- AnchorPane footer
- TeamMemberCollection teamMemberCollection
- VBox myTeamComponent
- RadioButton inProgressButton
- RadioButton allTeamButton
- RadioButton finishedButton
- Datasource<TeamCollection> teamDatasource
- Datasource<TeamMemberCollection> teamMemberDatasource
- Datasource<EventCollection> eventDatasource
- Datasource<JoinEventCollection> joinEventDatasource
- HashMap<String,Object> data
- String userId
- void initialize()
- void initMyTeam()
~ void onHandleAllTeamButton(ActionEvent)
~ void onHandleFinishedButton(ActionEvent)
~ void onHandleInProgressButton(ActionEvent)
+ void reloadData()
}
class cs211.project.controllers.CreateEventActivityController {
- TableColumn<Activity,String> dateColumn
- Label errorActivityDetail
- Label errorActivityName
- Label errorInputEndDate
- Label errorInputEndTime
- Label errorInputStartDate
- Label errorInputStartTime
- Label eventDate
- ImageView eventImage
- Label eventLocation
- Label eventName
- Label eventParticipant
- AnchorPane footer
- DatePicker inputActivityDateEnd
- DatePicker inputActivityDateStart
- TextArea inputActivityDetail
- TextField inputActivityName
- TextField inputActivityTimeEnd
- TextField inputActivityTimeStart
- TableColumn<Activity,String> nameColumn
- AnchorPane navbar
- TableView<Activity> scheduleTable
- TableColumn<Activity,String> timestampColumn
- Label titlePage
- boolean isEdit
- HashMap<String,Object> data
- EventActivityCollection eventActivityCollection
- Datasource<EventCollection> eventDatasource
- Datasource<JoinEventCollection> joinEventDatasource
- Datasource<EventActivityCollection> eventActivityDatasource
- UUID eventId
- UUID activityId
- void initialize()
- void showTable()
~ void initHeader()
~ void onHandleBackToPreviousPage(ActionEvent)
~ void onHandleSaveButton(ActionEvent)
~ void clearInput()
}
class cs211.project.controllers.components.LeftChatLayoutController {
- Circle senderImage
- Text senderMessage
- Label senderName
- Label timestamp
+ String getSenderMessage()
+ String getSenderName()
+ String getTimestamp()
+ void setSenderName(String)
+ void setSenderMessage(String)
+ void setSenderImage(String)
+ void setTimestamp(String)
}
class cs211.project.controllers.components.JoinTeamCard {
- UUID teamId
- UUID userId
- Button joinTeamButton
- Label teamParticipant
- Label teamName
- Label dateLabel
- HashMap<String,Object> data
- Datasource<TeamMemberCollection> teamMemberDatasource
- Datasource<TeamCollection> teamDatasource
- JoinTeamController joinTeamController
- void initialize()
- boolean teamIsFull()
+ void checkTeamIsFull()
~ void onHandleJoinTeam(ActionEvent)
+ void isJoinedTeam()
+ String getTeamParticipant()
+ String getTeamName()
+ String getTeamId()
+ String getUserId()
+ void setTeamParticipant(String)
+ void setTeamName(String)
+ void setTeamId(String)
+ void setUserId(String)
+ void setJoinTeamController(JoinTeamController)
+ void setJoinTeamButton(boolean,String)
+ void setDate(String,String)
}
class cs211.project.controllers.components.ListTeamPreview {
- Circle headTeamImageCircle
- Label titleTeamLabel
- String pathHeadTeamImageCircle
+ String getHeadTeamImageCircle()
+ String getTitleTeamLabel()
+ void setHeadTeamImageCircle(String)
+ void setTitleTeamLabel(String)
+ void setPathHeadTeamImageCircle(String)
}
class cs211.project.controllers.EventDetailController {
- AnchorPane navbar
- AnchorPane footer
- HBox eventCardHbox
- Text eventDetail
- ImageView eventImage
- Label eventLocation
- Label eventName
- Label eventParticipant
- Label eventStartDateTime
- Label eventEndDateTime
- Button registerEventButton
- Button joinTeamButton
- Label registrationPeriod
- List<EventCard> eventCardList
- HashMap<String,Object> data
- UUID eventId
- UUID userId
- Datasource<EventCollection> eventDatasource
- Datasource<JoinEventCollection> joinEventDatasource
- Datasource<TeamMemberCollection> teamMemberDatasource
- Datasource<TeamCollection> teamDatasource
- Event event
- EventCollection eventRecommendCollection
- ExecutorService executorService
- boolean isJoinEvent
- String previousPage
- void initialize()
- void checkInRegistrationPeriod()
- void initEventDetail()
- void checkIsJoinEvent()
~ void onHandleRegisterEvent(ActionEvent)
~ void onHandleJoinTeam(ActionEvent)
~ void onHandleGoToPreviousPage(ActionEvent)
+ String getEventDetail()
+ void setEventDetail(String)
+ String getEventImage()
+ void setEventImage(String)
+ void setRegistrationPeriod(String)
+ String getEventLocation()
+ void setEventLocation(String)
+ String getEventName()
+ void setEventName(String)
+ String getEventParticipant()
+ void setEventParticipant(String)
+ String getEventStartDateTime()
+ void setEventStartDateTime(String)
+ String getEventEndDateTime()
+ void setEventEndDateTime(String)
}
class cs211.project.controllers.AllEventController {
- AnchorPane navbar
- AnchorPane footer
- GridPane showAllEvent
- List<EventCard> eventCardList
- Datasource<EventCollection> eventDatasource
- Datasource<JoinEventCollection> joinEventDatasource
- EventCollection eventCollection
- HashMap<String,Object> data
- ExecutorService executorService
- TextField searchInput
- RadioButton latestButton
- RadioButton oldestButton
- RadioButton leastJoinButton
- RadioButton mostJoinButton
- RadioButton closestButton
- void initialize()
- void initAllEvent(EventCollection)
~ void onHandleBackToIndex(ActionEvent)
~ void onHandleLatestButton(ActionEvent)
- EventCollection getLatestEvent()
~ void onHandleOldestButton(ActionEvent)
~ void onHandleLeastJoinButton(ActionEvent)
~ void onHandleMostJoinButton(ActionEvent)
~ void onHandleClosestButton(ActionEvent)
~ void onHandleSearchEvent(ActionEvent)
}
@enduml